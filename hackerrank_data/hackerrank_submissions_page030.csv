submission_id,username,problem_name,language,code,page,url
1386872433,shlok29_2004onl1,unknown,unknown,"1
def can_partition_for_odd_product(A):
2
    # Check if the array contains any odd numbers
3
    has_odd = any(num % 2 == 1 for num in A)
4
5
    # If there are no odd numbers, it's impossible to get an odd product
6
    if not has_odd:
7
        return False
8
9
    # If there are odd numbers, we can always partition to get an odd product
10
    return True
11
12
# Read the number of test cases
13
T = int(input())
14
15
for _ in range(T):
16
    # Read the number of integers in the array
17
    N = int(input())
18
19
    # Read the array of integers
20
    A = list(map(int, input().split()))
21
22
    # Check if a partition exists
23
    if can_partition_for_odd_product(A):
24
        print(""YES"")
25
    else:
26
        print(""NO"")",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872433
1386872435,agrajat07,unknown,unknown,"1
def check_odd_product(A):
2
    n = len(A)
3
    found = False
4
    5
    6
    for i in range(1, 1 << n):
7
        S1 = [A[j] for j in range(n) if (i & (1 << j))]
8
        S2 = [A[j] for j in range(n) if not (i & (1 << j))]
9
10
        11
        if not S1 or not S2:
12
            continue
13
14
        15
        if sum(S1) % 2 != 0 and sum(S2) % 2 != 0:
16
            product = sum(S1) * sum(S2)
17
            if product % 2 != 0:  
18
                found = True
19
                break
20
21
    22
    if found:
23
        print(""YES"")
24
    else:
25
        print(""NO"")
26
27
28",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872435
1386872436,baripushpak,unknown,unknown,"1
def non_empty_subsets_count(N):
2
    # The number of non-empty subsets is 2^N - 1
3
    return (2 ** N) - 1
4
5
# Input processing
6
T = int(input())  # Number of test cases
7
for _ in range(T):
8
    N = int(input())  # Number of elements in the set
9
    print(non_empty_subsets_count(N))
10
11",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386872436
1386872430,diyabinoymanape1,unknown,unknown,"1
import sys
2
3
t = int(sys.stdin.readline())
4
5
for _ in range(t):
6
    n = int(sys.stdin.readline())
7
    line = sys.stdin.readline().split()
8
    9
    count_odd = 0
10
    for val in line:
11
        if int(val) % 2 == 1:
12
            count_odd += 1
13
14
    if count_odd >= 2 and (count_odd % 2 == 0):
15
        print(""YES"")
16
    else:
17
        print(""NO"")",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872430
1386872431,mauryapranay54,unknown,unknown,"1
def partition():
2
    T=int(input())
3
    for _ in range(T):
4
        N=int(input())
5
        A=list(map(int,input().split()))
6
        total=0;
7
        odd=0
8
        for x in A:
9
            if x%2 !=0:
10
                odd+=1
11
        if total%2==0 and odd>=2:
12
            print(""YES"")
13
        else:
14
            print(""NO"")
15
            16
partition()",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872431
1386872432,h1032221531,unknown,unknown,"1
import java.util.Scanner;
2
3
public class OddProductPartition { 
4
5
    public static void main(String [] args) {
6
        Scanner scanner = new Scanner(System.in);
7
        int T = scanner.nextInt();
8
        scanner.nextLine(); 
9
10
        StringBuilder output = new StringBuilder();
11
        for (int i = 0; i < T; i++) {
12
            int N = scanner.nextInt();  
13
            int oddCount = 0;
14
            for (int j = 0; j < N; j++) {
15
                int num = scanner.nextInt();
16
                if (num % 2 != 0) {
17
                    oddCount++;
18
                }
19
            }
20
             if (oddCount >= 2) {
21
                 output.append(""YES\n"");
22
             } else {
23
                 output.append(""NO\n"");
24
             }
25
             if (scanner.hasNextLine()) {
26
                 scanner.nextLine();
27
             }
28
        }
29
30
        System.out.println(output.toString());
31
        scanner.close();
32
    }
33
}",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872432
1386872425,shifalisingh181,unknown,unknown,"1
def can_partition(T, test_cases):
2
    results = []
3
    for i in range(T):
4
        N, A = test_cases[i]
5
        6
      7
        odd_count = sum(1 for x in A if x % 2 == 1)
8
        even_count = N - odd_count
9
        10
      11
        if odd_count > 0 and even_count > 0:
12
            results.append(""YES"")
13
        else:
14
            results.append(""NO"")
15
    16
    return results
17
18
if __name__ == ""__main__"":
19
    T = int(input().strip())  
20
    test_cases = []
21
    22
    for _ in range(T):
23
        N = int(input().strip())  # Number of integers in the array
24
        A = list(map(int, input().strip().split()))  # Array elements
25
        test_cases.append((N, A))
26
    27
    results = can_partition(T, test_cases)
28
    29
    for result in results:
30
        print(result)",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872425
1386872427,shaikhsaad497,unknown,unknown,"1
def can_partition_into_odd_product():
2
    import sys
3
    input = sys.stdin.read
4
    data = input().split()
5
6
    T = int(data[0])
7
    index = 1
8
9
    results = []
10
11
    for _ in range(T):
12
        N = int(data[index])
13
        index += 1
14
        A = list(map(int, data[index:index + N]))
15
        index += N
16
17
        # Count the number of odd numbers in the array
18
        odd_count = sum(1 for x in A if x % 2 != 0)
19
20
        # At least two odd numbers are required for the product to be odd
21
        if odd_count >= 2:
22
            results.append(""YES"")
23
        else:
24
            results.append(""NO"")
25
26
    # Output all results
27
    sys.stdout.write(""\n"".join(results) + ""\n"")
28
29
# Run the function
30
can_partition_into_odd_product()
31",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872427
1386872426,suyogkumbhar24,unknown,unknown,"1
#include <cmath>
2
#include <cstdio>
3
#include <vector>
4
#include <iostream>
5
#include <algorithm>
6
using namespace std;
7
8
9
int main() {
10
    int T;
11
    cin >> T;
12
13
    while (T--) {
14
        int N;
15
        cin >> N;
16
        vector<int> A(N);
17
18
        int odd_count = 0;
19
        for (int i = 0; i < N; i++) {
20
            cin >> A[i];
21
            if (A[i] % 2 != 0) {
22
                odd_count++;
23
            }
24
        }
25
26
        27
        if (odd_count >= 2 && (odd_count % 2 == 0)) {
28
            cout << ""YES\n"";
29
        } else {
30
            cout << ""NO\n"";
31
        }
32
    }
33
34
    return 0;
35
}",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872426
1386872424,ravijeetsharma11,unknown,unknown,"1
#include <bits/stdc++.h>
2
using namespace std;
3
4
int main(){
5
    int t;
6
    cin >> t;
7
    while(t--){
8
       int n; cin >> n;
9
       cout << (1 << n) - 1 << endl;
10
    }
11
    return 0;
12
}
13
14
15",30,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386872424
