submission_id,username,problem_name,language,code,page,url
1386871205,prashantyelurka1,unknown,unknown,"1
T = int(input())  
2
for _ in range(T):  
3
    m, n, a = map(int, input().split()) 
4
    area = m * n 
5
    count = ((m + a - 1) // a) * ((n + a - 1) // a)
6
    print (count)
7
    8",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/squarescaping/submissions/code/1386871205
1386871208,ravi942004,unknown,unknown,"1
import math
2
3
T = int(input())
4
for _ in range(T):
5
    N = int(input())
6
    print((1 << N) - 1)",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871208
1386871209,Rawat_vr44,unknown,unknown,"1
def can_partition(arr):
2
    if len(arr) < 2:
3
        return ""YES""
4
    return ""YES"" if sum(num % 2 for num in arr) % 2 == 0 else ""NO""
5
6
T = int(input())
7
for _ in range(T):
8
    N = int(input())
9
    arr = list(map(int, input().split()))
10
    print(can_partition(arr))",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871209
1386871201,khushbu1215,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
4
public class Solution {
5
6
    public static void main(String[] args) throws IOException {
7
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
8
        9
        int T = Integer.parseInt(br.readLine());
10
        11
        StringBuilder result = new StringBuilder();
12
        13
        while (T-- > 0) {
14
            int N = Integer.parseInt(br.readLine());
15
            result.append((1 << N) - 1).append(""\n"");  // 2^N - 1 using bitwise shift
16
        }
17
        18
        System.out.print(result);
19
    }
20
}",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871201
1386871202,anuragt1604,unknown,unknown,"1
def can_partition(arr):
2
    n = len(arr)
3
    total_sum = sum(arr)
4
    5
    for mask in range(1, (1 << n) - 1):
6
        sum1 = 0
7
        for i in range(n):
8
            if mask & (1 << i):
9
                sum1 += arr[i]
10
        sum2 = total_sum - sum1
11
        if sum1 * sum2 % 2 == 1:
12
            return True
13
    return False
14
15
def main():
16
    t = int(input())
17
    for _ in range(t):
18
        n = int(input())
19
        arr = list(map(int, input().split()))
20
        print(""YES"" if can_partition(arr) else ""NO"")
21
22
if __name__ == ""__main__"":
23
    main()",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871202
1386871203,mishranirajk121,unknown,unknown,"1
import sys
2
3
t = int(sys.stdin.readline())
4
for _ in range(t):
5
    n = int(sys.stdin.readline())
6
   7
    line = sys.stdin.readline().split()
8
    9
    count_odd = 0
10
    for val in line:
11
        if int(val) % 2 == 1:
12
            count_odd += 1
13
14
    if count_odd >= 2 and (count_odd % 2 == 0):
15
        print(""YES"")
16
    else:
17
        print(""NO"")",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871203
1386871196,ketan_kumavat191,unknown,unknown,"1
#include <cmath>
2
#include <cstdio>
3
#include <vector>
4
#include <iostream>
5
#include <algorithm>
6
using namespace std;
7
int main() {
8
    int T;
9
    cin >> T;
10
    while (T--) {
11
        int N;
12
        cin >> N;
13
        vector<int> A(N);
14
        int odd_count = 0;
15
        for (int i = 0; i < N; i++) {
16
            cin >> A[i];
17
            if (A[i] % 2 != 0) {
18
                odd_count++;
19
            }
20
        }
21
        22
        if (odd_count >= 2 && (odd_count % 2 == 0)) {
23
            cout << ""YES\n"";
24
        } else {
25
            cout << ""NO\n"";
26
        }
27
    }
28
    return 0;
29
}
30",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871196
1386871197,aayu_sh7021,unknown,unknown,"1
def unique_non_empty_subsets(T, test_cases):
2
    results = []
3
    for N in test_cases:
4
        # Total non-empty subsets are (2^N - 1)
5
        results.append((1 << N) - 1)  # Efficient calculation of 2^N
6
    return results
7
8
# Input
9
T = int(input())
10
test_cases = [int(input()) for _ in range(T)]
11
12
# Output
13
results = unique_non_empty_subsets(T, test_cases)
14
for res in results:
15
    print(res)",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871197
1386871199,tanishrai,unknown,unknown,"1
import java.util.Scanner;
2
3
public class PartitionOddProduct {
4
    public static void main(String[] args) {
5
        Scanner scanner = new Scanner(System.in);
6
7
        int T = scanner.nextInt();
8
9
        while (T-- > 0) {
10
            int N = scanner.nextInt();
11
            int[] A = new int[N];
12
13
            int oddCount = 0;
14
            for (int i = 0; i < N; i++) {
15
                A[i] = scanner.nextInt();
16
                if (A[i] % 2 != 0) {
17
                    oddCount++;
18
                }
19
            }
20
21
            if (oddCount >= 2) {
22
                System.out.println(""YES"");
23
            } else {
24
                System.out.println(""NO"");
25
            }
26
        }
27
28
        scanner.close();
29
    }
30
}
31",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871199
1386871195,h1032220354,unknown,unknown,"1
2
def cloth_required(testcases):
3
    result=[]
4
    for M,N,A in testcases:
5
        peices_length=(M+A-1)//A
6
        peices_width=(N+A-1)//A
7
        total=peices_width*peices_length
8
        result.append(total)
9
    return result
10
11
T=int(input())
12
testcases=[tuple(map(int,input().split())) for _ in range(T)]
13
14
result=cloth_required(testcases)
15
for res in result:
16
    print(res)",120,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/squarescaping/submissions/code/1386871195
