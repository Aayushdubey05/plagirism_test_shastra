submission_id,username,problem_name,language,code,page,url
1386871274,psthefreak,unknown,unknown,"1
import sys
2
3
t = int(sys.stdin.readline())
4
for _ in range(t):
5
    n = int(sys.stdin.readline())
6
    # Read the array as strings, no big list
7
    line = sys.stdin.readline().split()
8
    9
    count_odd = 0
10
    for val in line:
11
        if int(val) % 2 == 1:
12
            count_odd += 1
13
    14
    # Condition: need at least 2 odd elements, and total # of odd is even
15
    if count_odd >= 2 and (count_odd % 2 == 0):
16
        print(""YES"")
17
    else:
18
        print(""NO"")",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871274
1386871275,shiroryou,unknown,unknown,"1
import sys
2
3
t = int(sys.stdin.readline())
4
for _ in range(t):
5
    n = int(sys.stdin.readline())
6
    # Read the array as strings, no big list
7
    line = sys.stdin.readline().split()
8
    9
    count_odd = 0
10
    for val in line:
11
        if int(val) % 2 == 1:
12
            count_odd += 1
13
    14
    # Condition: need at least 2 odd elements, and total # of odd is even
15
    if count_odd >= 2 and (count_odd % 2 == 0):
16
        print(""YES"")
17
    else:
18
        print(""NO"")",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871275
1386871276,jashbarot05,unknown,unknown,"1
def solve(N, A):
2
    # For sum to be odd, we need odd sum of elements
3
    # So let's try all possible splits of array into two non-empty subsequences
4
    5
    # Convert to list if input is not already a list
6
    A = list(A)
7
    8
    # Try each possible mask - representing which elements go in first subsequence
9
    for mask in range(1, (1 << N) - 1):  # -1 to ensure second subsequence is non-empty
10
        sum1 = 0
11
        sum2 = 0
12
        13
        # Split array based on current mask
14
        for i in range(N):
15
            if mask & (1 << i):
16
                sum1 += A[i]
17
            else:
18
                sum2 += A[i]
19
        20
        # Check if both sums are odd
21
        if sum1 % 2 == 1 and sum2 % 2 == 1:
22
            return ""YES""
23
    24
    return ""NO""
25
26
# Read number of test cases
27
T = int(input())
28
29
for _ in range(T):
30
    # Read array size
31
    N = int(input())
32
    # Read array
33
    A = list(map(int, input().split()))
34
    35
    # Print result
36
    print(solve(N, A))",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871276
1386871271,sethdharmik5,unknown,unknown,"1
import java.util.Scanner;
2
3
public class NonEmptySubsets {
4
    public static void main(String[] args) {
5
        Scanner scanner = new Scanner(System.in);
6
        7
        // Read the number of test cases
8
        int T = scanner.nextInt();
9
        10
        // Process each test case
11
        for (int i = 0; i < T; i++) {
12
            // Read the number of elements in the set
13
            int N = scanner.nextInt();
14
            15
            // Calculate the number of non-empty subsets
16
            // Total subsets = 2^N, non-empty subsets = 2^N - 1
17
            int nonEmptySubsets = (1 << N) - 1; // Using bitwise left shift to calculate 2^N
18
            19
            // Output the result
20
            System.out.println(nonEmptySubsets);
21
        }
22
        23
        scanner.close();
24
    }
25
}",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871271
1386871272,yansh985,unknown,unknown,"1
import math
2
T = int(input())
3
for _ in range(T):
4
    N = int(input())
5
    print((1 << N) - 1)",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871272
1386871273,saranshagnihotr1,unknown,unknown,"1
import math
2
3
T = int(input())
4
for _ in range(T):
5
    N = int(input())
6
    print((1 << N) - 1)",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871273
1386871267,shreyaojha2,unknown,unknown,"1
def solve_test_case(N, A):
2
    odd_sum = sum(x for x in A if x % 2)
3
    even_sum = sum(x for x in A if x % 2 == 0)
4
    5
    for i in range(N):
6
        if A[i] % 2:  
7
            s1 = A[i]
8
            remaining_odd = odd_sum - s1
9
            if remaining_odd > 0 and s1 * remaining_odd % 2 == 1:
10
                return ""YES""
11
    12
    return ""NO""
13
14
T = int(input())
15
for _ in range(T):
16
    N = int(input())
17
    A = list(map(int, input().split()))
18
    print(solve_test_case(N, A))",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871267
1386871268,harshpal1905,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
import java.text.*;
4
import java.math.*;
5
import java.util.regex.*;
6
7
public class Solution {
8
9
    public static void main(String[] args) {
10
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
11
    }
12
}",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/squarescaping/submissions/code/1386871268
1386871270,saurabhpatel4589,unknown,unknown,"1
import java.util.Scanner;
2
3
public class Solution {
4
    public static void main(String[] args) {
5
        Scanner scanner = new Scanner(System.in);
6
        int T = scanner.nextInt();
7
8
        while (T-- > 0) {
9
            int N = scanner.nextInt();
10
            int oddCount = 0;
11
            for (int i = 0; i < N; i++) {
12
                int num = scanner.nextInt();
13
                if (num % 2 != 0) {
14
                    oddCount++;
15
                }
16
            }
17
18
            if (oddCount >= 2) {
19
                System.out.println(""YES"");
20
            } else {
21
                System.out.println(""NO"");
22
            }
23
        }
24
25
        scanner.close();
26
    }
27
}
28",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871270
1386871266,ts9892singh,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
4
public class Solution {
5
    public static void main(String[] args) {
6
        // Scanner to read input
7
        Scanner sc = new Scanner(System.in);
8
        9
        // Number of test cases
10
        int T = sc.nextInt();
11
        12
        // Process each test case
13
        for (int t = 0; t < T; t++) {
14
            // Read the number of integers in the test case
15
            int N = sc.nextInt();
16
            17
            // Array to store the integers
18
            int[] arr = new int[N];
19
            20
            // Read the list of integers
21
            int oddCount = 0;
22
            for (int i = 0; i < N; i++) {
23
                arr[i] = sc.nextInt();
24
                if (arr[i] % 2 == 1) {
25
                    oddCount++;
26
                }
27
            }
28
            29
            // Check if there are at least 2 odd numbers
30
            if (oddCount >= 2) {
31
                System.out.println(""YES"");
32
            } else {
33
                System.out.println(""NO"");
34
            }
35
        }
36
        37
        // Close the scanner
38
        sc.close();
39
    }
40
}
41",115,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871266
