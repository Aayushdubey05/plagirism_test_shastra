submission_id,username,problem_name,language,code,page,url
1386871844,h1032221618,unknown,unknown,"1
def solve_test_cases(M, N, A):
2
3
    squares_lengths = (M + A - 1) // A  
4
5
    squares_widths = (N + A - 1) // A   
6
7
    8
9
    return squares_lengths * squares_widths
10
11
T = int(input())
12
13
for _ in range(T):
14
15
    M, N, A = map(int, input().split())
16
17
    results = solve_test_cases(M, N, A)
18
19
    print(results)
20
21
.......................
22
23
def solve_test_case(N, A):
24
25
    odd_sum = sum(x for x in A if x % 2)
26
27
    even_sum = sum(x for x in A if x % 2 == 0)
28
29
    30
31
    for i in range(N):
32
33
        if A[i] % 2:  
34
35
            s1 = A[i]
36
37
            remaining_odd = odd_sum - s1
38
39
            if remaining_odd > 0 and s1 * remaining_odd % 2 == 1:
40
41
                return ""YES""
42
43
    44
45
    return ""NO""
46
47
T = int(input())
48
49
for _ in range(T):
50
51
    N = int(input())
52
53
    A = list(map(int, input().split()))
54
55
    print(solve_test_case(N, A))
56
57
..........................
58
59
def solve_test_cases(N):
60
61
    return (1 << N) - 1 
62
63
T = int(input())
64
65
for _ in range(T):
66
67
    N = int(input())
68
69
    print(solve_test_cases(N))",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871844
1386871845,h1032220677,unknown,unknown,"1
def solve_test_case(N, A):
2
    odd_sum = sum(x for x in A if x % 2)
3
    even_sum = sum(x for x in A if x % 2 == 0)
4
    5
    for i in range(N):
6
        if A[i] % 2:  
7
            s1 = A[i]
8
            remaining_odd = odd_sum - s1
9
            if remaining_odd > 0 and s1 * remaining_odd % 2 == 1:
10
                return ""YES""
11
    12
    return ""NO""
13
14
T = int(input())
15
for _ in range(T):
16
    N = int(input())
17
    A = list(map(int, input().split()))
18
    print(solve_test_case(N, A))
19",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871845
1386871846,tusharmis8087707,unknown,unknown,"1
def solve_test_cases(N):
2
    return (1 << N) - 1 
3
4
T = int(input())
5
for _ in range(T):
6
    N = int(input())
7
    print(solve_test_cases(N))",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871846
1386871840,abhijeetjha913,unknown,unknown,"1
def count_non_empty_subsets(test_cases):
2
    results = []
3
    for n in test_cases:
4
        # Total subsets = 2^N
5
        # Non-empty subsets = 2^N - 1
6
        results.append((1 << n) - 1)  # Using bitwise shift for 2^N
7
    return results
8
9
if __name__ == ""__main__"":
10
    T = int(input())  # Number of test cases
11
    test_cases = []
12
    for _ in range(T):
13
        N = int(input())  # Number of elements in the set
14
        test_cases.append(N)
15
16
    # Get results for all test cases
17
    results = count_non_empty_subsets(test_cases)
18
19
    # Print each result
20
    for res in results:
21
        print(res)
22",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871840
1386871841,h1032220876,unknown,unknown,"1
def count_non_empty_subsets(T, test_cases):
2
    results = []
3
    for N in test_cases:
4
        total_non_empty_subsets = (1 << N) - 1
5
        results.append(total_non_empty_subsets)
6
    return results
7
8
T = int(input())
9
test_cases = [int(input()) for _ in range(T)]
10
11
results = count_non_empty_subsets(T, test_cases)
12
for result in results:
13
    print(result)",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871841
1386871842,drashtitalia,unknown,unknown,"1
def main():
2
    T = int(input())
3
4
    for _ in range(T):
5
        N = int(input())
6
        A = list(map(int, input().split()))
7
8
        odd_count = sum(1 for x in A if x % 2 != 0)
9
10
        if odd_count >= 2 and odd_count % 2 == 0:
11
            print(""YES"")
12
        else:
13
            print(""NO"")
14
15
if __name__ == ""__main__"":
16
    main()
17",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871842
1386871837,riddhijoshi5900,unknown,unknown,"1
import sys
2
3
t = int(sys.stdin.readline())
4
for _ in range(t):
5
    n = int(sys.stdin.readline())
6
    line = sys.stdin.readline().split()
7
    8
    count_odd = 0
9
    for val in line:
10
        if int(val) % 2 == 1:
11
            count_odd += 1
12
    13
    if count_odd >= 2 and (count_odd % 2 == 0):
14
        print(""YES"")
15
    else:
16
        print(""NO"")
17",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871837
1386871838,jhaneeharika,unknown,unknown,"1
#include <cmath>
2
#include <cstdio>
3
#include <vector>
4
#include <iostream>
5
#include <algorithm>
6
using namespace std;
7
8
int main() {
9
    int T; 
10
    cin >> T;
11
    while (T--) {
12
        int N; 
13
        cin >> N;
14
        15
        vector<int> arr(N);
16
        int oddCount = 0;
17
        int evenCount = 0;
18
        for (int i = 0; i < N; i++) {
19
            cin >> arr[i];
20
            if (arr[i] % 2 != 0) {
21
                oddCount++; 
22
            } else {
23
                evenCount++; 
24
            }
25
        }
26
        if (oddCount >= 2) {
27
            cout << ""YES"" << endl;
28
        } else {
29
            cout << ""NO"" << endl;
30
        }
31
    }
32
    return 0;
33
}
34
35",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871838
1386871839,rajtishika,unknown,unknown,"1
# Enter your code here. Read input from STDIN. Print output to STDOUT
2
from collections import Counter
3
def p(T, tc):
4
    results = []
5
    6
    for test in tc:
7
        N, nums = test
8
        counts = Counter(nums)
9
        10
        # Check if all counts are even
11
        if all(count % 2 == 0 for count in counts.values()):
12
            results.append(""YES"")
13
        else:
14
            results.append(""NO"")
15
    16
    return results
17
18
# Read input
19
T = int(input())  # Number of test cases
20
tc = []
21
for _ in range(T):
22
    N = int(input())  # Length of the list
23
    nums = list(map(int, input().split()))  # The list of integers
24
    tc.append((N, nums))
25
26
# Output results
27
results = p(T, tc)
28
for result in results:
29
    print(result)
30",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871839
1386871836,kartikmaurya18,unknown,unknown,"1
def solve_test_case(N, A):
2
    odd_sum = sum(x for x in A if x % 2)
3
    even_sum = sum(x for x in A if x % 2 == 0)
4
    5
    for i in range(N):
6
        if A[i] % 2:  
7
            s1 = A[i]
8
            remaining_odd = odd_sum - s1
9
            if remaining_odd > 0 and s1 * remaining_odd % 2 == 1:
10
                return ""YES""
11
    12
    return ""NO""
13
14
T = int(input())
15
for _ in range(T):
16
    N = int(input())
17
    A = list(map(int, input().split()))
18
    print(solve_test_case(N, A))
19",72,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871836
