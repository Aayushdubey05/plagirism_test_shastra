submission_id,username,problem_name,language,code,page,url
1386871922,jhaneeharika,unknown,unknown,"1
#include <iostream>
2
using namespace std;
3
4
int main() {
5
    int t;
6
    cin >> t; 
7
    while (t--) {
8
        int n;
9
        cin >> n; 
10
        int count_odd = 0;
11
        for (int i = 0; i < n; ++i) {
12
            int val;
13
            cin >> val;
14
            if (val % 2 == 1) { 
15
                count_odd++;
16
            }
17
        }
18
        if (count_odd >= 2 && count_odd % 2 == 0) {
19
            cout << ""YES"" << endl;
20
        } else {
21
            cout << ""NO"" << endl;
22
        }
23
    }
24
    return 0;
25
}
26",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871922
1386871923,shlok29_2004onl1,unknown,unknown,"1
def can_partition_with_odd_product(T, test_cases):
2
    results = []
3
    for case in test_cases:
4
        N, A = case
5
        odd_count = sum(1 for x in A if x % 2 != 0)
6
        if odd_count >= 2:
7
            results.append(""YES"")
8
        else:
9
            results.append(""NO"")
10
    return results
11
12
# Input processing
13
T = int(input())
14
test_cases = []
15
for _ in range(T):
16
    N = int(input())
17
    A = list(map(int, input().split()))
18
    test_cases.append((N, A))
19
20
# Processing and output
21
results = can_partition_with_odd_product(T, test_cases)
22
print(""\n"".join(results))
23",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871923
1386871925,neupanepratik65,unknown,unknown,"1
T = int(input())
2
results = []
3
for _ in range(T):
4
    N = int(input())
5
    A = list(map(int, input().split()))
6
    odd_count = sum(1 for x in A if x % 2 != 0)
7
8
    if odd_count >= 2:
9
        results.append(""YES"")
10
    else:
11
        results.append(""NO"")
12
print(""\n"".join(results))",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871925
1386871917,adarshvijaysing1,unknown,unknown,"1
def partition_for_odd_sum_and_product(T, test_cases):
2
    results = []
3
    partitions = []
4
    5
    for case in test_cases:
6
        N, A = case
7
        8
        # Separate odd and even numbers
9
        odd = [x for x in A if x % 2 != 0]
10
        even = [x for x in A if x % 2 == 0]
11
12
        # Check if there are at least 2 odd numbers
13
        if len(odd) >= 2:
14
            # Create partitions
15
            S1 = [odd.pop()]  # Take one odd number
16
            S2 = odd + even   # Remaining odd and all even numbers go to S2
17
18
            # Verify partitions
19
            if sum(S1) % 2 != 0 and sum(S2) % 2 != 0:
20
                results.append(""YES"")
21
                partitions.append((S1, S2))
22
            else:
23
                results.append(""NO"")
24
                partitions.append(None)
25
        else:
26
            results.append(""NO"")
27
            partitions.append(None)
28
    29
    return results, partitions
30
31
# Input Handling
32
T = int(input())  # Number of test cases
33
test_cases = []
34
35
for _ in range(T):
36
    N = int(input())  # Number of elements in the array
37
    A = list(map(int, input().split()))  # The array elements
38
    test_cases.append((N, A))
39
40
# Process the input
41
results, partitions = partition_for_odd_sum_and_product(T, test_cases)
42
43
# Output results
44
for i in range(T):
45
    print(results[i])
46
47",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871917
1386871918,singh287686,unknown,unknown,"1
import java.util.Scanner;
2
3
public class Solution {
4
5
    public static void main(String[] args) {
6
        Scanner scanner = new Scanner(System.in);
7
8
        int T = scanner.nextInt();
9
        long[] results = new long[T];
10
11
        for (int t = 0; t < T; t++) {
12
            int N = scanner.nextInt();
13
            results[t] = (1L << N) - 1;
14
        }
15
16
        for (long r : results) {
17
            System.out.println(r);
18
        }
19
20
        scanner.close();
21
    }
22
}
23",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/subsets-challenge/submissions/code/1386871918
1386871919,harshitsingh9003,unknown,unknown,"1
def can_partition_to_odd_products(test_cases):
2
    results = []
3
    for case in test_cases:
4
        n, array = case
5
        odd_count = sum(1 for x in array if x % 2 == 1)
6
        if odd_count >= 2:
7
            results.append(""YES"")
8
        else:
9
            results.append(""NO"")
10
    return results
11
12
# Reading input
13
import sys
14
input = sys.stdin.read
15
data = input().split()
16
17
T = int(data[0])
18
test_cases = []
19
idx = 1
20
for _ in range(T):
21
    n = int(data[idx])
22
    idx += 1
23
    array = list(map(int, data[idx:idx + n]))
24
    idx += n
25
    test_cases.append((n, array))
26
27
# Solving and printing output
28
answers = can_partition_to_odd_products(test_cases)
29
sys.stdout.write(""\n"".join(answers) + ""\n"")
30",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871919
1386871915,alstonsoares17,unknown,unknown,"1
def can_partition_odd_product(t, test_cases):
2
    results = []
3
    for i in range(t):
4
        n = test_cases[i][0]
5
        arr = test_cases[i][1]
6
7
        odd_count = sum(1 for x in arr if x % 2 != 0)
8
9
        if odd_count > 0 and odd_count % 2 == 0:
10
            results.append(""YES"")
11
        else:
12
            results.append(""NO"")
13
    return results
14
15
# Input reading
16
t = int(input())
17
test_cases = []
18
for _ in range(t):
19
    n = int(input())
20
    arr = list(map(int, input().split()))
21
    test_cases.append((n, arr))
22
23
# Processing and output
24
results = can_partition_odd_product(t, test_cases)
25
for res in results:
26
    print(res)
27",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871915
1386871914,sanskruti01thak1,unknown,unknown,"1
def partition_odd_product():
2
    T = int(input().strip())
3
    results = []
4
    for _ in range(T):
5
        N = int(input().strip())
6
        A = list(map(int, input().strip().split()))
7
        odd_count = sum(1 for x in A if x % 2 == 1)
8
        if odd_count >= 2:
9
            results.append(""YES"")
10
        else:
11
            results.append(""NO"")
12
    print(""\n"".join(results))
13
14
partition_odd_product()
15",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871914
1386871916,beherabikas007,unknown,unknown,"1
#include <cmath>
2
3
#include <cstdio>
4
5
#include <vector>
6
7
#include <iostream>
8
9
#include <algorithm>
10
11
using namespace std;
12
13
int main() {
14
15
    int T;
16
17
    cin >> T;
18
19
    while (T--) {
20
21
        int N;
22
23
        cin >> N;
24
25
        vector<int> A(N);
26
27
        int odd_count = 0;
28
29
        for (int i = 0; i < N; i++) {
30
31
            cin >> A[i];
32
33
            if (A[i] % 2 != 0) {
34
35
                odd_count++;
36
37
            }
38
39
        }
40
41
        42
43
        if (odd_count >= 2 && (odd_count % 2 == 0)) {
44
45
            cout << ""YES\n"";
46
47
        } else {
48
49
            cout << ""NO\n"";
50
51
        }
52
53
    }
54
55
    return 0;
56
57
}",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871916
1386871913,dheerajvishwaka2,unknown,unknown,"1
#include <cmath>
2
#include <cstdio>
3
#include <vector>
4
#include <iostream>
5
#include <algorithm>
6
using namespace std;
7
8
bool canPartitionIntoOddSums(vector<int>& a) {
9
    int oddCount = 0, evenCount = 0;
10
11
    for (int num : a) {
12
        if (num % 2 == 0)
13
            evenCount++;
14
        else
15
            oddCount++;
16
    }
17
18
    return oddCount >= 2;
19
}
20
21
int main() {
22
    int t;
23
    cin>>t;
24
    while(t--){
25
        int n;
26
        cin >> n;
27
28
        vector<int> a(n);
29
        for (int i = 0; i < n; i++) {
30
            cin >> a[i];
31
        }
32
33
        if (canPartitionIntoOddSums(a)) {
34
            cout << ""YES"" << endl;
35
        } else {
36
            cout << ""NO"" << endl;
37
        }
38
}
39
    return 0;
40
}
41",66,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386871913
