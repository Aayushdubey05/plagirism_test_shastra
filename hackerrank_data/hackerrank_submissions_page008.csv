submission_id,username,problem_name,language,code,page,url
1386872841,vedikakolambkar,unknown,unknown,"1
def can_partition(arr):
2
    odd_count = sum(1 for x in arr if x % 2 != 0)
3
    even_count = len(arr) - odd_count
4
  5
    return odd_count >= 2
6
7
t = int(input())
8
results = []
9
10
for _ in range(t):
11
    n = int(input())
12
    arr = list(map(int, input().split()))
13
    results.append(""YES"" if can_partition(arr) else ""NO"")
14
15
print(""\n"".join(results))
16",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872841
1386872843,bhooomikapal10,unknown,unknown,"1
def solve():
2
    T = int(input())
3
    for _ in range(T):
4
        N = int(input())
5
        numbers = list(map(int, input().split()))
6
        7
        odd_count = sum(1 for num in numbers if num % 2 != 0)
8
        9
        if odd_count % 2 == 0 and odd_count > 0:
10
            print(""YES"")
11
        else:
12
            print(""NO"")
13
14
solve()",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872843
1386872844,nayakmanasvi16,unknown,unknown,"1
def can_partition_to_odd_product(test_cases):
2
    results = []
3
    for case in test_cases:
4
        n, array = case
5
        odd_count = sum(1 for num in array if num % 2 != 0)
6
        even_count = n - odd_count
7
        if odd_count >=2  and even_count >=2:
8
            results.append(""YES"")
9
        else:
10
            results.append(""NO"")
11
    return results
12
13
t = int(input())  
14
test_cases = []
15
for _ in range(t):
16
    n = int(input())  
17
    array = list(map(int, input().split()))  
18
    test_cases.append((n, array))
19
20
results = can_partition_to_odd_product(test_cases)
21
22
for result in results:
23
    print(result)",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872844
1386872836,h1032220876,unknown,unknown,"1
def can_partition_odd_product(T, test_cases):
2
    results = []
3
    for case in test_cases:
4
        N, arr = case
5
        even_count = sum(1 for x in arr if x % 2 == 0)
6
        odd_count = N - even_count
7
8
        if odd_count >= 2:
9
            results.append(""YES"")
10
        else:
11
            results.append(""NO"")
12
    return results
13
14
T = int(input())
15
test_cases = []
16
for _ in range(T):
17
    N = int(input())
18
    arr = list(map(int, input().split()))
19
    test_cases.append((N, arr))
20
21
results = can_partition_odd_product(T, test_cases)
22
for result in results:
23
    print(result)",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872836
1386872837,aggarwalkartike1,unknown,unknown,"1
def can_partition_into_odd_product(T, test_cases):
2
    results = []
3
4
    for case in test_cases:
5
        N, A = case
6
        7
        # Count the number of odd numbers in the array
8
        odd_count = sum(1 for x in A if x % 2 != 0)
9
10
        # To make the product odd, we need at least two odd numbers
11
        if odd_count >= 2:
12
            results.append(""YES"")
13
        else:
14
            results.append(""NO"")
15
16
    return results
17
18
# Input handling
19
import sys
20
input = sys.stdin.read
21
data = input().splitlines()
22
23
T = int(data[0])
24
test_cases = []
25
index = 1
26
27
for _ in range(T):
28
    N = int(data[index])
29
    index += 1
30
    A = list(map(int, data[index].split()))
31
    index += 1
32
    test_cases.append((N, A))
33
34
# Get the results for each test case
35
results = can_partition_into_odd_product(T, test_cases)
36
37
# Output the results
38
sys.stdout.write(""\n"".join(results) + ""\n"")",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872837
1386872838,prashantyelurka1,unknown,unknown,"1
T = int(input())
2
results = []
3
for _ in range(T):
4
    N = int(input())
5
    A = list(map(int, input().split()))
6
    total_sum = sum(A)
7
    odd_exists = any(x % 2 == 1 for x in A)
8
    even_exists = any(x % 2 == 0 for x in A)
9
    if total_sum % 2 == 0 and odd_exists and even_exists:
10
        results.append(""YES"")
11
    else:
12
        results.append(""NO"")
13
print(""\n"".join(results))",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872838
1386872826,harshsahani078,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
4
public class Solution {
5
6
    public static void main(String[] args) {
7
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
8
        Scanner scanner = new Scanner(System.in);
9
        10
        11
        int T = scanner.nextInt();
12
        13
  14
        for (int t = 0; t < T; t++) {
15
            int N = scanner.nextInt(); 
16
            int[] array = new int[N];
17
            18
            19
            int totalSum = 0;
20
            int oddCount = 0;
21
            for (int i = 0; i < N; i++) {
22
                array[i] = scanner.nextInt();
23
                totalSum += array[i];
24
                if (array[i] % 2 != 0) {
25
                    oddCount++;
26
                }
27
            }
28
            29
           30
            if (totalSum % 2 != 0 || oddCount < 2) {
31
                System.out.println(""NO"");
32
            } else {
33
                System.out.println(""YES"");
34
            }
35
        }
36
        37
        scanner.close();
38
    }
39
}",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872826
1386872833,amitrai6537,unknown,unknown,"1
#include <cmath>
2
#include <cstdio>
3
#include <vector>
4
#include <iostream>
5
#include <algorithm>
6
using namespace std;
7
8
9
int main() {
10
    int T;
11
    cin >> T;
12
13
    while (T--) {
14
        int N;
15
        cin >> N;
16
        vector<int> A(N);
17
18
        int odd_count = 0;
19
        for (int i = 0; i < N; i++) {
20
            cin >> A[i];
21
            if (A[i] % 2 != 0) {
22
                odd_count++;
23
            }
24
        }
25
26
        27
        if (odd_count >= 2 && (odd_count % 2 == 0)) {
28
            cout << ""YES\n"";
29
        } else {
30
            cout << ""NO\n"";
31
        }
32
    }
33
34
    return 0;
35
}
36",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872833
1386872834,praneelshah_ind1,unknown,unknown,"1
#include <stdio.h>
2
#include <string.h>
3
#include <math.h>
4
#include <stdlib.h>
5
6
int main() {
7
    int T; // Number of test cases
8
    scanf(""%d"", &T); // Reading number of test cases from stdin
9
    10
    while (T--) {
11
        int N; // Size of the array
12
        scanf(""%d"", &N); // Reading size of array from stdin
13
        14
        int A[N];
15
        int odd_count = 0;
16
        17
        // Reading array elements from stdin and counting odd numbers
18
        for (int i = 0; i < N; i++) {
19
            scanf(""%d"", &A[i]);
20
            if (A[i] % 2 != 0) {
21
                odd_count++;
22
            }
23
        }
24
        25
        // Printing the result to stdout
26
        if (odd_count >= 2) {
27
            printf(""YES\n"");
28
        } else {
29
            printf(""NO\n"");
30
        }
31
    }
32
    33
    return 0;
34
}",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872834
1386872822,jashbarot05,unknown,unknown,"1
def solve():
2
    T = int(input())  # Number of test cases
3
    results = []
4
    5
    for _ in range(T):
6
        N = int(input())  # Number of elements in the array
7
        A = list(map(int, input().split()))  # Array elements
8
        9
        # Count how many odd numbers are in the array
10
        odd_count = sum(1 for x in A if x % 2 == 1)
11
        12
        # If there are at least two odd numbers, we can partition into two subsequences
13
        # with odd sums.
14
        if odd_count >= 2:
15
            results.append(""YES"")
16
        else:
17
            results.append(""NO"")
18
    19
    # Print all results for each test case
20
    print(""\n"".join(results))
21
22
if __name__ == ""__main__"":
23
    solve()
24",8,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-1-a/challenges/partitioning-for-odd-multiplication/submissions/code/1386872822
